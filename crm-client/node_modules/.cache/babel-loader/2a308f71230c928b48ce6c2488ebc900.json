{"ast":null,"code":"import axios from \"axios\";\nimport { GET_BACKLOG, GET_ERRORS, GET_PROJECT_TASK } from \"./types\";\nexport const addProjectTask = (backlog_id, project_task, history) => async (dispatch) => {\n  try {\n    await axios.post(`http://localhost:8080/api/backlog/add-pt/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:8080/api/backlog/get-backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {}\n};\nexport const getProjectTask = (backlog_id, pt_id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`http://localhost:8080/api/backlog/get-pt/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\n  try {\n    await axios.patch(`http://localhost:8080/api/backlog/update-pt/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const deleteProjectTask = back;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/crm-fulltack/crm-client/src/actions/backlogAction.js"],"names":["axios","GET_BACKLOG","GET_ERRORS","GET_PROJECT_TASK","addProjectTask","backlog_id","project_task","history","dispatch","post","push","type","payload","err","response","data","getBacklog","res","get","getProjectTask","pt_id","updateProjectTask","patch","deleteProjectTask","back"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,gBAAlC,QAA0D,SAA1D;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,UAAD,EAAaC,YAAb,EAA2BC,OAA3B,KAAuC,OACnEC,QADmE,KAEhE;AACH,MAAI;AACF,UAAMR,KAAK,CAACS,IAAN,CACH,4CAA2CJ,UAAW,EADnD,EAEJC,YAFI,CAAN;AAIAC,IAAAA,OAAO,CAACG,IAAR,CAAc,iBAAgBL,UAAW,EAAzC;AACAG,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,UADC;AAEPU,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAVD,CAUE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,UADC;AAEPU,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAnBM;AAoBP,OAAO,MAAMC,UAAU,GAAIX,UAAD,IAAgB,MAAOG,QAAP,IAAoB;AAC5D,MAAI;AACF,UAAMS,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACf,iDAAgDb,UAAW,EAD5C,CAAlB;AAGAG,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,WADC;AAEPW,MAAAA,OAAO,EAAEK,GAAG,CAACF;AAFN,KAAD,CAAR;AAID,GARD,CAQE,OAAOF,GAAP,EAAY,CAAE;AACjB,CAVM;AAYP,OAAO,MAAMM,cAAc,GAAG,CAACd,UAAD,EAAae,KAAb,EAAoBb,OAApB,KAAgC,OAC5DC,QAD4D,KAEzD;AACH,MAAI;AACF,UAAMS,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACf,4CAA2Cb,UAAW,IAAGe,KAAM,EADhD,CAAlB;AAGAZ,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,gBADC;AAEPS,MAAAA,OAAO,EAAEK,GAAG,CAACF;AAFN,KAAD,CAAR;AAID,GARD,CAQE,OAAOF,GAAP,EAAY;AACZN,IAAAA,OAAO,CAACG,IAAR,CAAa,YAAb;AACD;AACF,CAdM;AAgBP,OAAO,MAAMW,iBAAiB,GAAG,CAC/BhB,UAD+B,EAE/Be,KAF+B,EAG/Bd,YAH+B,EAI/BC,OAJ+B,KAK5B,MAAOC,QAAP,IAAoB;AACvB,MAAI;AACF,UAAMR,KAAK,CAACsB,KAAN,CACH,+CAA8CjB,UAAW,IAAGe,KAAM,EAD/D,EAEJd,YAFI,CAAN;AAIAC,IAAAA,OAAO,CAACG,IAAR,CAAc,iBAAgBL,UAAW,EAAzC;AACAG,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,UADC;AAEPU,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAVD,CAUE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,UADC;AAEPU,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAtBM;AAuBP,OAAO,MAAMQ,iBAAiB,GAAGC,IAA1B","sourcesContent":["import axios from \"axios\";\r\nimport { GET_BACKLOG, GET_ERRORS, GET_PROJECT_TASK } from \"./types\";\r\nexport const addProjectTask = (backlog_id, project_task, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await axios.post(\r\n      `http://localhost:8080/api/backlog/add-pt/${backlog_id}`,\r\n      project_task\r\n    );\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8080/api/backlog/get-backlog/${backlog_id}`\r\n    );\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {}\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `http://localhost:8080/api/backlog/get-pt/${backlog_id}/${pt_id}`\r\n    );\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async (dispatch) => {\r\n  try {\r\n    await axios.patch(\r\n      `http://localhost:8080/api/backlog/update-pt/${backlog_id}/${pt_id}`,\r\n      project_task\r\n    );\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\nexport const deleteProjectTask = back;\r\n"]},"metadata":{},"sourceType":"module"}